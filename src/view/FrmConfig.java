/*
 * Criado por Uedney Cristiano de Morais
 * Contato do desenvolvedor: uedneymorais@gmail.com (62)-991861075
 * JFrame responsável por gravar informações de configuração
 */
package view;

import controller.Crontab;
import controller.Hash;
import controller.VerificaArquivo;
import java.awt.Color;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.security.NoSuchAlgorithmException;
import java.util.ArrayList;
import java.util.List;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author pc
 */
public class FrmConfig extends javax.swing.JFrame {

    /**
     * Creates new form FrmConfig
     */
    VerificaArquivo verificaArquivo = new VerificaArquivo();
    Hash hash = new Hash();
    Crontab crontab = new Crontab();
    String swrpdv = "";
    String sflex = "";

    public FrmConfig() {
        this.setIconImage(new ImageIcon(getClass().getResource("/images/postgre.jpg")).getImage());
        initComponents();
        verificaArquivo.verificaArqBanco();

        preencherBanco();
        bloqueaCampos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtPortaFlex = new javax.swing.JTextField();
        txtIpFlex = new javax.swing.JTextField();
        txtBaseFlex = new javax.swing.JTextField();
        txtUsuarioFlex = new javax.swing.JTextField();
        txtDesTBackupFlex = new javax.swing.JTextField();
        btnDestBackupFlex = new javax.swing.JButton();
        jCheckBoxUsaFlex = new javax.swing.JCheckBox();
        txtSenhaFlex = new javax.swing.JPasswordField();
        jPanel4 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtPortaWrpdv = new javax.swing.JTextField();
        txtIpWrpdv = new javax.swing.JTextField();
        txtUsuarioWrpdv = new javax.swing.JTextField();
        txtDesTBackupWrpdv = new javax.swing.JTextField();
        btnDestBackupWrpdv = new javax.swing.JButton();
        jCheckBoxUsaWrpdv = new javax.swing.JCheckBox();
        txtSenhaWrpdv = new javax.swing.JPasswordField();
        txtBaseWrpdv = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        j00 = new javax.swing.JCheckBox();
        j01 = new javax.swing.JCheckBox();
        j02 = new javax.swing.JCheckBox();
        j03 = new javax.swing.JCheckBox();
        j04 = new javax.swing.JCheckBox();
        j05 = new javax.swing.JCheckBox();
        j06 = new javax.swing.JCheckBox();
        j07 = new javax.swing.JCheckBox();
        j08 = new javax.swing.JCheckBox();
        j09 = new javax.swing.JCheckBox();
        j10 = new javax.swing.JCheckBox();
        j11 = new javax.swing.JCheckBox();
        j12 = new javax.swing.JCheckBox();
        j13 = new javax.swing.JCheckBox();
        j14 = new javax.swing.JCheckBox();
        j15 = new javax.swing.JCheckBox();
        j16 = new javax.swing.JCheckBox();
        j17 = new javax.swing.JCheckBox();
        j18 = new javax.swing.JCheckBox();
        j19 = new javax.swing.JCheckBox();
        j20 = new javax.swing.JCheckBox();
        j21 = new javax.swing.JCheckBox();
        j22 = new javax.swing.JCheckBox();
        j23 = new javax.swing.JCheckBox();
        btnEditar = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        txtDirPostgreSql = new javax.swing.JTextField();
        btnBinPostgres = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jComboBoxFormato = new javax.swing.JComboBox<>();
        txtCrontabManual = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txtCrontabAuto = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jCheckBoxManual = new javax.swing.JCheckBox();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Configurações de Backup");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        jLabel1.setText("Configurações de Backup");

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Flex:"));

        jLabel2.setText("Endereço IP:");

        jLabel3.setText("Porta:");

        jLabel4.setText("Base:");

        jLabel5.setText("Usuario:");

        jLabel6.setText("Senha:");

        jLabel7.setText("Destino do backup:");

        btnDestBackupFlex.setText("...");
        btnDestBackupFlex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDestBackupFlexActionPerformed(evt);
            }
        });

        jCheckBoxUsaFlex.setText("Efetuar Backup Flex:");

        txtSenhaFlex.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtSenhaFlexFocusGained(evt);
            }
        });
        txtSenhaFlex.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtSenhaFlexMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtPortaFlex, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                        .addComponent(txtDesTBackupFlex, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)
                        .addComponent(btnDestBackupFlex, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtIpFlex, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtBaseFlex, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jCheckBoxUsaFlex))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtUsuarioFlex, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE)
                            .addComponent(txtSenhaFlex))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtIpFlex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtPortaFlex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtBaseFlex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtUsuarioFlex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtSenhaFlex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtDesTBackupFlex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDestBackupFlex))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxUsaFlex)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Wrpdv:"));

        jLabel8.setText("Endereço IP:");

        jLabel9.setText("Porta:");

        jLabel10.setText("Base:");

        jLabel11.setText("Usuario:");

        jLabel12.setText("Senha:");

        jLabel13.setText("Destino do backup:");

        btnDestBackupWrpdv.setText("...");
        btnDestBackupWrpdv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDestBackupWrpdvActionPerformed(evt);
            }
        });

        jCheckBoxUsaWrpdv.setText("Efetuar Backup Wrpdv:");

        txtSenhaWrpdv.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtSenhaWrpdvFocusGained(evt);
            }
        });
        txtSenhaWrpdv.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtSenhaWrpdvMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBoxUsaWrpdv)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addComponent(txtDesTBackupWrpdv, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnDestBackupWrpdv, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtSenhaWrpdv, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtUsuarioWrpdv, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtBaseWrpdv, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE)
                            .addComponent(txtPortaWrpdv, javax.swing.GroupLayout.Alignment.LEADING)))
                    .addComponent(txtIpWrpdv, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtIpWrpdv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtPortaWrpdv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtBaseWrpdv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtUsuarioWrpdv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtSenhaWrpdv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txtDesTBackupWrpdv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDestBackupWrpdv))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxUsaWrpdv)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Horários:"));

        j00.setText("00:00");

        j01.setText("01:00");

        j02.setText("02:00");

        j03.setText("03:00");

        j04.setText("04:00");

        j05.setText("05:00");

        j06.setText("06:00");

        j07.setText("07:00");

        j08.setText("08:00");

        j09.setText("09:00");

        j10.setText("10:00");

        j11.setText("11:00");

        j12.setText("12:00");

        j13.setText("13:00");

        j14.setText("14:00");

        j15.setText("15:00");

        j16.setText("16:00");

        j17.setText("17:00");

        j18.setText("18:00");

        j19.setText("19:00");

        j20.setText("20:00");

        j21.setText("21:00");

        j22.setText("22:00");

        j23.setText("23:00");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(j00)
                        .addGap(18, 18, 18)
                        .addComponent(j05)
                        .addGap(18, 18, 18)
                        .addComponent(j10)
                        .addGap(18, 18, 18)
                        .addComponent(j15)
                        .addGap(18, 18, 18)
                        .addComponent(j20))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(j01)
                        .addGap(18, 18, 18)
                        .addComponent(j06)
                        .addGap(18, 18, 18)
                        .addComponent(j11)
                        .addGap(18, 18, 18)
                        .addComponent(j16)
                        .addGap(18, 18, 18)
                        .addComponent(j21))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(j02)
                        .addGap(18, 18, 18)
                        .addComponent(j07)
                        .addGap(18, 18, 18)
                        .addComponent(j12)
                        .addGap(18, 18, 18)
                        .addComponent(j17)
                        .addGap(18, 18, 18)
                        .addComponent(j22))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(j03)
                        .addGap(18, 18, 18)
                        .addComponent(j08)
                        .addGap(18, 18, 18)
                        .addComponent(j13)
                        .addGap(18, 18, 18)
                        .addComponent(j18)
                        .addGap(18, 18, 18)
                        .addComponent(j23))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(j04)
                        .addGap(18, 18, 18)
                        .addComponent(j09)
                        .addGap(18, 18, 18)
                        .addComponent(j14)
                        .addGap(18, 18, 18)
                        .addComponent(j19)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(j00)
                    .addComponent(j05)
                    .addComponent(j10)
                    .addComponent(j15)
                    .addComponent(j20))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(j01)
                    .addComponent(j06)
                    .addComponent(j11)
                    .addComponent(j16)
                    .addComponent(j21))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(j02)
                    .addComponent(j07)
                    .addComponent(j12)
                    .addComponent(j17)
                    .addComponent(j22))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(j03)
                    .addComponent(j08)
                    .addComponent(j13)
                    .addComponent(j18)
                    .addComponent(j23))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(j04)
                    .addComponent(j09)
                    .addComponent(j14)
                    .addComponent(j19))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Postgres"));

        jLabel14.setText("Bin do postgres: ");

        btnBinPostgres.setText("...");
        btnBinPostgres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBinPostgresActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(51, 102, 255));
        jLabel15.setText("Ex: C:\\Program Files\\PostgreSQL\\12\\bin ");

        jLabel16.setText("Formato: ");

        jComboBoxFormato.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { ".backup", ".sql" }));

        jLabel17.setText("Script Crontab:");

        txtCrontabAuto.setEditable(false);
        txtCrontabAuto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCrontabAutoActionPerformed(evt);
            }
        });

        jLabel18.setText("Script automático: ");

        jCheckBoxManual.setText("Usa ScriptManual");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(jLabel16)
                    .addComponent(jLabel17)
                    .addComponent(jLabel18))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel15)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addComponent(txtDirPostgreSql, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnBinPostgres, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(txtCrontabManual)
                        .addComponent(txtCrontabAuto))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jComboBoxFormato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jCheckBoxManual)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(txtDirPostgreSql, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBinPostgres))
                .addGap(1, 1, 1)
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jComboBoxFormato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBoxManual))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCrontabManual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(txtCrontabAuto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnEditar)
                        .addGap(18, 18, 18)
                        .addComponent(btnSalvar))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(300, 300, 300)
                                .addComponent(jLabel1))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEditar)
                    .addComponent(btnSalvar))
                .addContainerGap())
        );

        jMenu1.setText("Configurações");

        jMenu3.setText("Email");
        jMenu3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu3MouseClicked(evt);
            }
        });
        jMenu1.add(jMenu3);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Sair");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jMenu3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu3MouseClicked

        FrmEmail frmEmail = new FrmEmail();
        frmEmail.setVisible(true);

    }//GEN-LAST:event_jMenu3MouseClicked

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed

        try {
            Properties propertiesBanco = new Properties();
            //Setamos o arquivo que vai ser lido
            FileInputStream fis = new FileInputStream("C:\\BackupPostgresql\\config\\dados-banco.properties");
            //metodo load faz a leitura atraves do objeto fis
            propertiesBanco.load(fis);

            if (txtCrontabManual.getText().equals("") && jCheckBoxManual.isSelected()) {
                txtCrontabManual.requestFocus();
                txtCrontabManual.setBackground(Color.YELLOW);
                JOptionPane.showMessageDialog(rootPane, "Para usar Crontab Manual é necessário adicionar uma instrução válida", "ERRO:", JOptionPane.ERROR_MESSAGE);

            } else {
                salvar();
                salvar();
                JOptionPane.showMessageDialog(rootPane, "Configurações salvas com sucesso!\n é necessário reiniciar o programa para as alterações entrarem em vigor");
                //Dados.setMessage(txtEmail.getText());
                bloqueaCampos();
                btnEditar.setEnabled(true);
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(FrmConfig.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(FrmConfig.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NoSuchAlgorithmException ex) {
            Logger.getLogger(FrmConfig.class.getName()).log(Level.SEVERE, null, ex);
        }
        //btnEditar.setEnabled(true);
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void salvar() throws NoSuchAlgorithmException {
        try {

            //Cria um objeto da classe java.util.Properties
            Properties propertiesFlex = new Properties();
            FileInputStream fis = new FileInputStream("C:\\BackupPostgresql\\config\\dados-banco.properties");
            propertiesFlex.load(fis);

            String hashInit = propertiesFlex.getProperty("hashInit");
            if (hashInit == "") {
                hashInit = "c4ca4238a0b92382dcc509a6f75849b";
            } else {
                hashInit = propertiesFlex.getProperty("hashInit");
            }

            //String senhaFlex = hash.hashMD5(txtSenhaFlex.getText());
            String senhaFlexDecodificada = hash.HashBase64(txtSenhaFlex.getText());
            String senhaWrpdvDecodificada = hash.HashBase64(txtSenhaWrpdv.getText());

            //String swrpdv = new String(txtSenhaWrpdv.getPassword());
            //String senhaWrpdv = hash.stringHexa(swrpdv);
            //System.out.println("VEIO DAQUI senha wrpdv:  "+ senhaWrpdv+" SWRPDV: "+swrpdv);
            //txtSenhaFlex.setText(senhaFlex);
            //setando as propriedades(key) e os seus valores(value) para base FLEX
            //propertiesFlex.setProperty("txtCrontab", txtCrontab.getText());
//            crontab.retCron();
//            String txtCrontabAuto = retCron();
//            System.out.println("txtCront"+txtCrontabAuto);
            propertiesFlex.setProperty("txtCrontabAuto", crontab.retCron());
            propertiesFlex.setProperty("txtIpFlex", txtIpFlex.getText());
            propertiesFlex.setProperty("txtPortaFlex", txtPortaFlex.getText());
            propertiesFlex.setProperty("txtBaseFlex", txtBaseFlex.getText());
            propertiesFlex.setProperty("txtUsuarioFlex", txtUsuarioFlex.getText());
            propertiesFlex.setProperty("txtSenhaFlex", senhaFlexDecodificada);
            propertiesFlex.setProperty("txtSenhaWrpdv", senhaWrpdvDecodificada);

//            if (sflex.equals("")) {
//                propertiesFlex.setProperty("txtSenhaFlex", "");
//                System.out.println("CAIU NO EQUALS");
//            }
//            if (sflex.equals("") && !txtSenhaFlex.getText().equals("")) {
//                propertiesFlex.setProperty("txtSenhaFlex", hash.stringHexa(txtSenhaFlex.getText()));
//                System.out.println("CAIU NO EQUALS e no diferente");
//            }
//            if (!sflex.equals("") && txtSenhaFlex.getText().equals(swrpdv)) {
//                propertiesFlex.setProperty("txtSenhaFlex", swrpdv);
//                System.out.println("CAIU NO DIFERENTE E IGUAL");
//            }
//            if (!sflex.equals("") && !sflex.equals(txtSenhaFlex.getText())) {
//                propertiesFlex.setProperty("txtSenhaFlex", hash.stringHexa(txtSenhaFlex.getText()));
//                System.out.println("CAIU NO DIFERENTE DE VAZIO E DIFERENTE DA CAIXA");
//            }if (sflex.equals("") && txtSenhaFlex.getText().equals("")) {
//                propertiesFlex.setProperty("txtSenhaFlex", "");
//            }if (!sflex.equals("") && txtSenhaFlex.getText().equals("")) {
//                propertiesFlex.setProperty("txtSenhaFlex", "");
//            }
            propertiesFlex.setProperty("txtDesTBackupFlex", txtDesTBackupFlex.getText());
            propertiesFlex.setProperty("jCheckBoxUsaFlex", String.valueOf(jCheckBoxUsaFlex.isSelected()));
            //setando as propriedades(key) e os seus valores(value) para base WRPDV
            propertiesFlex.setProperty("txtIpWrpdv", txtIpWrpdv.getText());
            propertiesFlex.setProperty("txtPortaWrpdv", txtPortaWrpdv.getText());
//            if (swrpdv.equals("")) {
//                propertiesFlex.setProperty("txtSenhaWrpdv", "");
//                System.out.println("CAIU NO EQUALS");
//            }
//            if (swrpdv.equals("") && !txtSenhaWrpdv.getText().equals("")) {
//                propertiesFlex.setProperty("txtSenhaWrpdv", hash.stringHexa(txtSenhaWrpdv.getText()));
//                System.out.println("CAIU NO EQUALS e no diferente");
//            }
//            if (!swrpdv.equals("") && txtSenhaWrpdv.getText().equals(swrpdv)) {
//                propertiesFlex.setProperty("txtSenhaWrpdv", swrpdv);
//                System.out.println("CAIU NO DIFERENTE E IGUAL");
//            }
//            if (!swrpdv.equals("") && !swrpdv.equals(txtSenhaWrpdv.getText())) {
//                propertiesFlex.setProperty("txtSenhaWrpdv", hash.stringHexa(txtSenhaWrpdv.getText()));
//                System.out.println("CAIU NO DIFERENTE DE VAZIO E DIFERENTE DA CAIXA");
//            }if (swrpdv.equals("") && txtSenhaWrpdv.getText().equals("")) {
//                propertiesFlex.setProperty("txtSenhaWrpdv", "");
//            }
//            if (!swrpdv.equals("") && txtSenhaWrpdv.getText().equals("")) {
//                propertiesFlex.setProperty("txtSenhaWrpdv", "");
//            }

            propertiesFlex.setProperty("txtBaseWrpdv", txtBaseWrpdv.getText());
            propertiesFlex.setProperty("txtUsuarioWrpdv", txtUsuarioWrpdv.getText());
            propertiesFlex.setProperty("txtDesTBackupWrpdv", txtDesTBackupWrpdv.getText());
            propertiesFlex.setProperty("jCheckBoxUsaWrpdv", String.valueOf(jCheckBoxUsaWrpdv.isSelected()));
            propertiesFlex.setProperty("jCheckBoxManual", String.valueOf(jCheckBoxManual.isSelected()));
            propertiesFlex.setProperty("txtDirPostgreSql", txtDirPostgreSql.getText());
            propertiesFlex.setProperty("jComboBoxFormato", jComboBoxFormato.getSelectedItem().toString());
            propertiesFlex.setProperty("txtCrontabManual", txtCrontabManual.getText());
            propertiesFlex.setProperty("hashInit", hashInit);
            //setando os checkbox de hora
            propertiesFlex.setProperty("j00", String.valueOf(j00.isSelected()));
            propertiesFlex.setProperty("j01", String.valueOf(j01.isSelected()));
            propertiesFlex.setProperty("j02", String.valueOf(j02.isSelected()));
            propertiesFlex.setProperty("j03", String.valueOf(j03.isSelected()));
            propertiesFlex.setProperty("j04", String.valueOf(j04.isSelected()));
            propertiesFlex.setProperty("j05", String.valueOf(j05.isSelected()));
            propertiesFlex.setProperty("j06", String.valueOf(j06.isSelected()));
            propertiesFlex.setProperty("j07", String.valueOf(j07.isSelected()));
            propertiesFlex.setProperty("j08", String.valueOf(j08.isSelected()));
            propertiesFlex.setProperty("j09", String.valueOf(j09.isSelected()));
            propertiesFlex.setProperty("j10", String.valueOf(j10.isSelected()));
            propertiesFlex.setProperty("j11", String.valueOf(j11.isSelected()));
            propertiesFlex.setProperty("j12", String.valueOf(j12.isSelected()));
            propertiesFlex.setProperty("j13", String.valueOf(j13.isSelected()));
            propertiesFlex.setProperty("j14", String.valueOf(j14.isSelected()));
            propertiesFlex.setProperty("j15", String.valueOf(j15.isSelected()));
            propertiesFlex.setProperty("j16", String.valueOf(j16.isSelected()));
            propertiesFlex.setProperty("j17", String.valueOf(j17.isSelected()));
            propertiesFlex.setProperty("j18", String.valueOf(j18.isSelected()));
            propertiesFlex.setProperty("j19", String.valueOf(j19.isSelected()));
            propertiesFlex.setProperty("j20", String.valueOf(j20.isSelected()));
            propertiesFlex.setProperty("j21", String.valueOf(j21.isSelected()));
            propertiesFlex.setProperty("j22", String.valueOf(j22.isSelected()));
            propertiesFlex.setProperty("j23", String.valueOf(j23.isSelected()));

            //Criamos um objeto FileOutputStream para base FLEX
            FileOutputStream fos = new FileOutputStream("C:\\BackupPostgresql\\config\\dados-banco.properties");
            //grava os dados no arquivo base FLEX 
            propertiesFlex.store(fos, "ARQUIVO DE CONFIGURAÇÃO BASE FLEX:");
            //fecha o arquivo
            fos.close();
            preencherBanco();

        } catch (IOException ex) {
            System.out.println(ex.getMessage());
            ex.printStackTrace();
        }
    }

    private void btnBinPostgresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBinPostgresActionPerformed
        JFileChooser jFileChooser = new JFileChooser();
        jFileChooser.setDialogTitle("Procurar diretório");
        jFileChooser.setFileSelectionMode(jFileChooser.DIRECTORIES_ONLY);
        //jFileChooser.showOpenDialog(this);
        int retorno = jFileChooser.showOpenDialog(this);

        if (retorno == JFileChooser.APPROVE_OPTION) {
            File file = jFileChooser.getSelectedFile();
            txtDirPostgreSql.setText(file.getPath());
        }
    }//GEN-LAST:event_btnBinPostgresActionPerformed

    private void btnDestBackupWrpdvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDestBackupWrpdvActionPerformed
        JFileChooser jFileChooser = new JFileChooser();
        jFileChooser.setDialogTitle("Procurar diretório");
        jFileChooser.setFileSelectionMode(jFileChooser.DIRECTORIES_ONLY);
        //jFileChooser.showOpenDialog(this);
        int retorno = jFileChooser.showOpenDialog(this);

        if (retorno == JFileChooser.APPROVE_OPTION) {
            File file = jFileChooser.getSelectedFile();
            txtDesTBackupWrpdv.setText(file.getPath());
        }
    }//GEN-LAST:event_btnDestBackupWrpdvActionPerformed

    private void btnDestBackupFlexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDestBackupFlexActionPerformed
        JFileChooser jFileChooser = new JFileChooser();
        jFileChooser.setDialogTitle("Procurar diretório");
        jFileChooser.setFileSelectionMode(jFileChooser.DIRECTORIES_ONLY);
        //jFileChooser.showOpenDialog(this);
        int retorno = jFileChooser.showOpenDialog(this);

        if (retorno == JFileChooser.APPROVE_OPTION) {
            File file = jFileChooser.getSelectedFile();
            txtDesTBackupFlex.setText(file.getPath());
        }
    }//GEN-LAST:event_btnDestBackupFlexActionPerformed

    private void txtCrontabAutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCrontabAutoActionPerformed
    }//GEN-LAST:event_txtCrontabAutoActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed

        liberaCampos();

    }//GEN-LAST:event_btnEditarActionPerformed

    private void txtSenhaFlexFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSenhaFlexFocusGained

        if (btnSalvar.isEnabled()) {
            txtSenhaFlex.setText("");
        }

    }//GEN-LAST:event_txtSenhaFlexFocusGained

    private void txtSenhaWrpdvFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSenhaWrpdvFocusGained
        if (btnSalvar.isEnabled()) {
            txtSenhaWrpdv.setText("");
        }
    }//GEN-LAST:event_txtSenhaWrpdvFocusGained

    private void txtSenhaFlexMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtSenhaFlexMouseClicked
        if (btnSalvar.isEnabled()) {
            txtSenhaFlex.setText("");
        }
    }//GEN-LAST:event_txtSenhaFlexMouseClicked

    private void txtSenhaWrpdvMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtSenhaWrpdvMouseClicked
        if (btnSalvar.isEnabled()) {
            txtSenhaWrpdv.setText("");
        }
    }//GEN-LAST:event_txtSenhaWrpdvMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmConfig.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmConfig.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmConfig.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmConfig.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmConfig().setVisible(true);
            }
        });
    }

    public void preencherBanco() {

        try {
            Properties propertiesBanco = new Properties();
            //Setamos o arquivo que vai ser lido
            FileInputStream fis = new FileInputStream("C:\\BackupPostgresql\\config\\dados-banco.properties");

            //metodo load faz a leitura atraves do objeto fis
            propertiesBanco.load(fis);

            //Captura o valor da propriedade, atraves do nome da propriedade(Key       
            txtIpFlex.setText(propertiesBanco.getProperty("txtIpFlex"));
            txtPortaFlex.setText(propertiesBanco.getProperty("txtPortaFlex"));
            txtBaseFlex.setText(propertiesBanco.getProperty("txtBaseFlex"));
            txtUsuarioFlex.setText(propertiesBanco.getProperty("txtUsuarioFlex"));
            //txtSenhaFlex.setText(propertiesBanco.getProperty("txtSenhaFlex"));
            //sflex = propertiesBanco.getProperty("txtSenhaFlex");
            txtSenhaFlex.setText(hash.HashBase64Decoded(propertiesBanco.getProperty("txtSenhaFlex")));
            txtDesTBackupFlex.setText(propertiesBanco.getProperty("txtDesTBackupFlex"));
            txtIpWrpdv.setText(propertiesBanco.getProperty("txtIpWrpdv"));
            txtPortaWrpdv.setText(propertiesBanco.getProperty("txtPortaWrpdv"));
            txtBaseWrpdv.setText(propertiesBanco.getProperty("txtBaseWrpdv"));
            txtUsuarioWrpdv.setText(propertiesBanco.getProperty("txtUsuarioWrpdv"));
            //txtSenhaWrpdv.setText(propertiesBanco.getProperty("txtSenhaWrpdv"));
            //swrpdv = propertiesBanco.getProperty("txtSenhaWrpdv");
            txtSenhaWrpdv.setText(hash.HashBase64Decoded(propertiesBanco.getProperty("txtSenhaWrpdv")));
            txtDesTBackupWrpdv.setText(propertiesBanco.getProperty("txtDesTBackupWrpdv"));
            jCheckBoxUsaFlex.setSelected(Boolean.parseBoolean(propertiesBanco.getProperty("jCheckBoxUsaFlex")));
            jCheckBoxManual.setSelected(Boolean.parseBoolean(propertiesBanco.getProperty("jCheckBoxManual")));
            jCheckBoxUsaWrpdv.setSelected(Boolean.parseBoolean(propertiesBanco.getProperty("jCheckBoxUsaWrpdv")));
            txtDirPostgreSql.setText(propertiesBanco.getProperty("txtDirPostgreSql"));
            txtCrontabAuto.setText(propertiesBanco.getProperty("txtCrontabAuto"));
            txtCrontabManual.setText(propertiesBanco.getProperty("txtCrontabManual"));
            jComboBoxFormato.setSelectedItem(propertiesBanco.getProperty("jComboBoxFormato"));

            j00.setSelected(Boolean.parseBoolean(propertiesBanco.getProperty("j00")));
            j01.setSelected(Boolean.parseBoolean(propertiesBanco.getProperty("j01")));
            j02.setSelected(Boolean.parseBoolean(propertiesBanco.getProperty("j02")));
            j03.setSelected(Boolean.parseBoolean(propertiesBanco.getProperty("j03")));
            j04.setSelected(Boolean.parseBoolean(propertiesBanco.getProperty("j04")));
            j05.setSelected(Boolean.parseBoolean(propertiesBanco.getProperty("j05")));
            j06.setSelected(Boolean.parseBoolean(propertiesBanco.getProperty("j06")));
            j07.setSelected(Boolean.parseBoolean(propertiesBanco.getProperty("j07")));
            j08.setSelected(Boolean.parseBoolean(propertiesBanco.getProperty("j08")));
            j09.setSelected(Boolean.parseBoolean(propertiesBanco.getProperty("j09")));
            j10.setSelected(Boolean.parseBoolean(propertiesBanco.getProperty("j10")));
            j11.setSelected(Boolean.parseBoolean(propertiesBanco.getProperty("j11")));
            j12.setSelected(Boolean.parseBoolean(propertiesBanco.getProperty("j12")));
            j13.setSelected(Boolean.parseBoolean(propertiesBanco.getProperty("j13")));
            j14.setSelected(Boolean.parseBoolean(propertiesBanco.getProperty("j14")));
            j15.setSelected(Boolean.parseBoolean(propertiesBanco.getProperty("j15")));
            j16.setSelected(Boolean.parseBoolean(propertiesBanco.getProperty("j16")));
            j17.setSelected(Boolean.parseBoolean(propertiesBanco.getProperty("j17")));
            j18.setSelected(Boolean.parseBoolean(propertiesBanco.getProperty("j18")));
            j19.setSelected(Boolean.parseBoolean(propertiesBanco.getProperty("j19")));
            j20.setSelected(Boolean.parseBoolean(propertiesBanco.getProperty("j20")));
            j21.setSelected(Boolean.parseBoolean(propertiesBanco.getProperty("j21")));
            j22.setSelected(Boolean.parseBoolean(propertiesBanco.getProperty("j22")));
            j23.setSelected(Boolean.parseBoolean(propertiesBanco.getProperty("j23")));

            if (rootPaneCheckingEnabled) {

            }

        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private void bloqueaCampos() {
        btnSalvar.setEnabled(false);
        txtIpFlex.setEditable(false);
        txtPortaFlex.setEditable(false);
        txtBaseFlex.setEditable(false);
        txtUsuarioFlex.setEditable(false);
        txtSenhaFlex.setEditable(false);
        txtDesTBackupFlex.setEditable(false);
        jCheckBoxUsaFlex.setEnabled(false);
        btnDestBackupFlex.setEnabled(false);
        btnBinPostgres.setEnabled(false);
        txtIpWrpdv.setEditable(false);
        txtPortaWrpdv.setEditable(false);
        txtBaseWrpdv.setEditable(false);
        txtUsuarioWrpdv.setEditable(false);
        txtSenhaWrpdv.setEditable(false);
        txtDesTBackupWrpdv.setEditable(false);
        jCheckBoxUsaWrpdv.setEnabled(false);
        btnDestBackupWrpdv.setEnabled(false);

        txtDirPostgreSql.setEditable(false);
        jCheckBoxManual.setEnabled(false);
        jComboBoxFormato.setEnabled(false);
        txtCrontabManual.setEditable(false);
        txtCrontabAuto.setEditable(false);
        j00.setEnabled(false);
        j01.setEnabled(false);
        j02.setEnabled(false);
        j03.setEnabled(false);
        j04.setEnabled(false);
        j05.setEnabled(false);
        j06.setEnabled(false);
        j07.setEnabled(false);
        j08.setEnabled(false);
        j09.setEnabled(false);
        j10.setEnabled(false);
        j11.setEnabled(false);
        j12.setEnabled(false);
        j13.setEnabled(false);
        j14.setEnabled(false);
        j15.setEnabled(false);
        j16.setEnabled(false);
        j17.setEnabled(false);
        j18.setEnabled(false);
        j19.setEnabled(false);
        j20.setEnabled(false);
        j21.setEnabled(false);
        j22.setEnabled(false);
        j23.setEnabled(false);

    }

    public void liberaCampos() {

        btnSalvar.setEnabled(true);
        txtIpFlex.setEditable(true);
        txtPortaFlex.setEditable(true);
        txtBaseFlex.setEditable(true);
        txtUsuarioFlex.setEditable(true);
        txtSenhaFlex.setEditable(true);
        txtDesTBackupFlex.setEditable(true);
        jCheckBoxUsaFlex.setEnabled(true);
        btnDestBackupFlex.setEnabled(true);
        btnBinPostgres.setEnabled(true);
        txtIpWrpdv.setEditable(true);
        txtPortaWrpdv.setEditable(true);
        txtBaseWrpdv.setEditable(true);
        txtUsuarioWrpdv.setEditable(true);
        txtSenhaWrpdv.setEditable(true);
        txtDesTBackupWrpdv.setEditable(true);
        jCheckBoxUsaWrpdv.setEnabled(true);
        btnDestBackupWrpdv.setEnabled(true);

        txtDirPostgreSql.setEditable(true);
        jCheckBoxManual.setEnabled(true);
        jComboBoxFormato.setEnabled(true);
        txtCrontabManual.setEditable(true);
        txtCrontabAuto.setEditable(true);

        j00.setEnabled(true);
        j01.setEnabled(true);
        j02.setEnabled(true);
        j03.setEnabled(true);
        j04.setEnabled(true);
        j05.setEnabled(true);
        j06.setEnabled(true);
        j07.setEnabled(true);
        j08.setEnabled(true);
        j09.setEnabled(true);
        j10.setEnabled(true);
        j11.setEnabled(true);
        j12.setEnabled(true);
        j13.setEnabled(true);
        j14.setEnabled(true);
        j15.setEnabled(true);
        j16.setEnabled(true);
        j17.setEnabled(true);
        j18.setEnabled(true);
        j19.setEnabled(true);
        j20.setEnabled(true);
        j21.setEnabled(true);
        j22.setEnabled(true);
        j23.setEnabled(true);
        //txtCaminho.setEditable(true);
        btnSalvar.setEnabled(true);
        btnEditar.setEnabled(false);
        // btnEscolher.setEnabled(true);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBinPostgres;
    private javax.swing.JButton btnDestBackupFlex;
    private javax.swing.JButton btnDestBackupWrpdv;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JCheckBox j00;
    private javax.swing.JCheckBox j01;
    private javax.swing.JCheckBox j02;
    private javax.swing.JCheckBox j03;
    private javax.swing.JCheckBox j04;
    private javax.swing.JCheckBox j05;
    private javax.swing.JCheckBox j06;
    private javax.swing.JCheckBox j07;
    private javax.swing.JCheckBox j08;
    private javax.swing.JCheckBox j09;
    private javax.swing.JCheckBox j10;
    private javax.swing.JCheckBox j11;
    private javax.swing.JCheckBox j12;
    private javax.swing.JCheckBox j13;
    private javax.swing.JCheckBox j14;
    private javax.swing.JCheckBox j15;
    private javax.swing.JCheckBox j16;
    private javax.swing.JCheckBox j17;
    private javax.swing.JCheckBox j18;
    private javax.swing.JCheckBox j19;
    private javax.swing.JCheckBox j20;
    private javax.swing.JCheckBox j21;
    private javax.swing.JCheckBox j22;
    private javax.swing.JCheckBox j23;
    private javax.swing.JCheckBox jCheckBoxManual;
    private javax.swing.JCheckBox jCheckBoxUsaFlex;
    private javax.swing.JCheckBox jCheckBoxUsaWrpdv;
    private javax.swing.JComboBox<String> jComboBoxFormato;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JTextField txtBaseFlex;
    private javax.swing.JTextField txtBaseWrpdv;
    private javax.swing.JTextField txtCrontabAuto;
    private javax.swing.JTextField txtCrontabManual;
    private javax.swing.JTextField txtDesTBackupFlex;
    private javax.swing.JTextField txtDesTBackupWrpdv;
    private javax.swing.JTextField txtDirPostgreSql;
    private javax.swing.JTextField txtIpFlex;
    private javax.swing.JTextField txtIpWrpdv;
    private javax.swing.JTextField txtPortaFlex;
    private javax.swing.JTextField txtPortaWrpdv;
    private javax.swing.JPasswordField txtSenhaFlex;
    private javax.swing.JPasswordField txtSenhaWrpdv;
    private javax.swing.JTextField txtUsuarioFlex;
    private javax.swing.JTextField txtUsuarioWrpdv;
    // End of variables declaration//GEN-END:variables
}
